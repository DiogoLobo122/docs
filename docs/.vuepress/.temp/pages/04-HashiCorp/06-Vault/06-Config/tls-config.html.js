export const data = JSON.parse("{\"key\":\"v-b4c712d6\",\"path\":\"/04-HashiCorp/06-Vault/06-Config/tls-config.html\",\"title\":\"Vault Server tls 설정\",\"lang\":\"ko-KR\",\"frontmatter\":{\"description\":\"Nomad Common Configuration\",\"tag\":[\"Vault\",\"https\",\"Configuration\",\"Server\"],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/04-HashiCorp/06-Vault/06-Config/tls-config.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"docmoa\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Vault Server tls 설정\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Nomad Common Configuration\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"ko-KR\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Vault\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"https\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Configuration\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Server\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Vault Server tls 설정\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[],\"git\":{},\"readingTime\":{\"minutes\":0.41,\"words\":124},\"filePathRelative\":\"04-HashiCorp/06-Vault/06-Config/tls-config.md\",\"excerpt\":\"<h1> Vault Server tls 설정</h1>\\n<ul>\\n<li>Consul tls create 명령어를 이용하여 인증서 생성, 그외에 사설인증서 만드는 방법으로는 더 테스트 해봐야 할듯</li>\\n</ul>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># consul tls create로 인증서 생성</span>\\nconsul tls ca create <span class=\\\"token parameter variable\\\">-domain</span><span class=\\\"token operator\\\">=</span>vault <span class=\\\"token parameter variable\\\">-days</span> <span class=\\\"token number\\\">3650</span>\\nconsul tls cert create <span class=\\\"token parameter variable\\\">-domain</span><span class=\\\"token operator\\\">=</span>vault <span class=\\\"token parameter variable\\\">-dc</span><span class=\\\"token operator\\\">=</span>global  <span class=\\\"token parameter variable\\\">-server</span> <span class=\\\"token parameter variable\\\">-days</span> <span class=\\\"token number\\\">3650</span>\\nconsul tls cert create <span class=\\\"token parameter variable\\\">-domain</span><span class=\\\"token operator\\\">=</span>vault <span class=\\\"token parameter variable\\\">-dc</span><span class=\\\"token operator\\\">=</span>global  <span class=\\\"token parameter variable\\\">-client</span> <span class=\\\"token parameter variable\\\">-days</span> <span class=\\\"token number\\\">3650</span>\\nconsul tls cert create <span class=\\\"token parameter variable\\\">-domain</span><span class=\\\"token operator\\\">=</span>vault <span class=\\\"token parameter variable\\\">-dc</span><span class=\\\"token operator\\\">=</span>global  <span class=\\\"token parameter variable\\\">-cli</span> <span class=\\\"token parameter variable\\\">-days</span> <span class=\\\"token number\\\">3650</span>\\n\\n<span class=\\\"token comment\\\"># vault config는 아래와 같다.</span>\\nui <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n\\nstorage <span class=\\\"token string\\\">\\\"consul\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  address <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"127.0.0.1:8500\\\"</span>\\n  path    <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"vault/\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nlistener <span class=\\\"token string\\\">\\\"tcp\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  address         <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"0.0.0.0:8200\\\"</span>\\n  <span class=\\\"token comment\\\">#tls_disable = 1</span>\\n  tls_cert_file <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"/root/temp/global-server-vault-0.pem\\\"</span>\\n  tls_key_file  <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"/root/temp/global-server-vault-0-key.pem\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\ndisable_mlock <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\ndefault_lease_ttl <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"768h\\\"</span>\\nmax_lease_ttl <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"768h\\\"</span>\\n\\napi_addr <span class=\\\"token operator\\\">=</span>  <span class=\\\"token string\\\">\\\"https://172.21.2.50:8200\\\"</span>\\n\\n<span class=\\\"token comment\\\"># 명령어를 써야 할 경우 cli 인증서를 export 해줘야한다.</span>\\n<span class=\\\"token builtin class-name\\\">export</span> <span class=\\\"token assign-left variable\\\">VAULT_CACERT</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">${<span class=\\\"token environment constant\\\">HOME</span>}</span>/temp/vault-agent-ca.pem\\\"</span>\\n<span class=\\\"token builtin class-name\\\">export</span> <span class=\\\"token assign-left variable\\\">VAULT_CLIENT_CERT</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">${<span class=\\\"token environment constant\\\">HOME</span>}</span>/temp/global-cli-vault-0.pem\\\"</span>\\n<span class=\\\"token builtin class-name\\\">export</span> <span class=\\\"token assign-left variable\\\">VAULT_CLIENT_KEY</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">${<span class=\\\"token environment constant\\\">HOME</span>}</span>/temp/global-cli-vault-0-key.pem\\\"</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"copyright\":{\"license\":\"CC BY-NC-ND 4.0 Licensed | ⓒ 2021-present docmoa™ contributers all rights reserved.\"}}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
