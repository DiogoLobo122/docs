export const data = JSON.parse("{\"key\":\"v-5e3dbafa\",\"path\":\"/04-HashiCorp/06-Vault/04-UseCase/nomad-integration.html\",\"title\":\"Vault & Nomad Integration Test\",\"lang\":\"ko-KR\",\"frontmatter\":{\"head\":[[\"meta\",{\"name\":\"Vault - Nomad Integration\",\"content\":\"애플리케이션 변경을 최소화 하여 Vault와 연동하기\"}],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/04-HashiCorp/06-Vault/04-UseCase/nomad-integration.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"docmoa\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Vault & Nomad Integration Test\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Vault &amp; Nomad Integration Test Dev Mode 를 활용한 테스트 목적 : Spring boot 기반 애플리케이션에서 Nomad 를 이용하여 Vault의 dynamic secret 을 최소한의 코드변경으로 사용할 수 있는 워크 플로우 구성 코드 기반 인경우의 예제 : https://dev.to/aws-builders/aws-sts-with-spring-cloud-vault-1e5g Vault-Nomad Integration : https://www.nomadproject.io/docs/integrations/vault-integration Version (Download) Nomad v1.3.1 (2b054e38e91af964d1235faa98c286ca3f527e56) Vault v1.10.3 (af866591ee60485f05d6e32dd63dde93df686dfb) Kubernetes 환경인 경우 Vault CSI Provider를 통해 비슷한 구성 가능 : https://www.vaultproject.io/docs/platform/k8s/csi\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"ko-KR\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"nomad\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"vault\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"aws\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"db\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Vault & Nomad Integration Test\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]],\"tag\":[\"nomad\",\"vault\",\"aws\",\"db\"],\"description\":\"Vault &amp; Nomad Integration Test Dev Mode 를 활용한 테스트 목적 : Spring boot 기반 애플리케이션에서 Nomad 를 이용하여 Vault의 dynamic secret 을 최소한의 코드변경으로 사용할 수 있는 워크 플로우 구성 코드 기반 인경우의 예제 : https://dev.to/aws-builders/aws-sts-with-spring-cloud-vault-1e5g Vault-Nomad Integration : https://www.nomadproject.io/docs/integrations/vault-integration Version (Download) Nomad v1.3.1 (2b054e38e91af964d1235faa98c286ca3f527e56) Vault v1.10.3 (af866591ee60485f05d6e32dd63dde93df686dfb) Kubernetes 환경인 경우 Vault CSI Provider를 통해 비슷한 구성 가능 : https://www.vaultproject.io/docs/platform/k8s/csi\"},\"headers\":[{\"level\":2,\"title\":\"1. Vault\",\"slug\":\"_1-vault\",\"link\":\"#_1-vault\",\"children\":[{\"level\":3,\"title\":\"1.1 Vault Dev Run\",\"slug\":\"_1-1-vault-dev-run\",\"link\":\"#_1-1-vault-dev-run\",\"children\":[]},{\"level\":3,\"title\":\"1.2 Vault Setup\",\"slug\":\"_1-2-vault-setup\",\"link\":\"#_1-2-vault-setup\",\"children\":[]}]},{\"level\":2,\"title\":\"2. Nomad\",\"slug\":\"_2-nomad\",\"link\":\"#_2-nomad\",\"children\":[{\"level\":3,\"title\":\"2.1 Nomad Dev Run (Vault Integrated)\",\"slug\":\"_2-1-nomad-dev-run-vault-integrated\",\"link\":\"#_2-1-nomad-dev-run-vault-integrated\",\"children\":[]},{\"level\":3,\"title\":\"2.2. Nomad Env\",\"slug\":\"_2-2-nomad-env\",\"link\":\"#_2-2-nomad-env\",\"children\":[]},{\"level\":3,\"title\":\"2.2 Mysql\",\"slug\":\"_2-2-mysql\",\"link\":\"#_2-2-mysql\",\"children\":[]}]},{\"level\":2,\"title\":\"3. Dynamic Secret\",\"slug\":\"_3-dynamic-secret\",\"link\":\"#_3-dynamic-secret\",\"children\":[{\"level\":3,\"title\":\"3.1 AWS\",\"slug\":\"_3-1-aws\",\"link\":\"#_3-1-aws\",\"children\":[]},{\"level\":3,\"title\":\"3.2 DB\",\"slug\":\"_3-2-db\",\"link\":\"#_3-2-db\",\"children\":[]}]},{\"level\":2,\"title\":\"4. Sample Spring-boot\",\"slug\":\"_4-sample-spring-boot\",\"link\":\"#_4-sample-spring-boot\",\"children\":[{\"level\":3,\"title\":\"4.1 demo app\",\"slug\":\"_4-1-demo-app\",\"link\":\"#_4-1-demo-app\",\"children\":[]},{\"level\":3,\"title\":\"4.2 Set dummy properties & Test\",\"slug\":\"_4-2-set-dummy-properties-test\",\"link\":\"#_4-2-set-dummy-properties-test\",\"children\":[]},{\"level\":3,\"title\":\"4.3 build jar\",\"slug\":\"_4-3-build-jar\",\"link\":\"#_4-3-build-jar\",\"children\":[]},{\"level\":3,\"title\":\"4.4 build container\",\"slug\":\"_4-4-build-container\",\"link\":\"#_4-4-build-container\",\"children\":[]}]},{\"level\":2,\"title\":\"5. Nomad Job with dynamic secret\",\"slug\":\"_5-nomad-job-with-dynamic-secret\",\"link\":\"#_5-nomad-job-with-dynamic-secret\",\"children\":[{\"level\":3,\"title\":\"5.1 Nomad Job Sample Run (Java Driver)\",\"slug\":\"_5-1-nomad-job-sample-run-java-driver\",\"link\":\"#_5-1-nomad-job-sample-run-java-driver\",\"children\":[]},{\"level\":3,\"title\":\"5.2 Nomad Job Sample Run (Docker Driver)\",\"slug\":\"_5-2-nomad-job-sample-run-docker-driver\",\"link\":\"#_5-2-nomad-job-sample-run-docker-driver\",\"children\":[]}]}],\"git\":{},\"readingTime\":{\"minutes\":4.24,\"words\":1271},\"filePathRelative\":\"04-HashiCorp/06-Vault/04-UseCase/nomad-integration.md\",\"excerpt\":\"<h1> Vault &amp; Nomad Integration Test</h1>\\n<blockquote>\\n<p>Dev Mode 를 활용한 테스트</p>\\n<ul>\\n<li>\\n<p><strong>목적</strong> : Spring boot 기반 애플리케이션에서 Nomad 를 이용하여 Vault의 dynamic secret 을 최소한의 코드변경으로 사용할 수 있는 워크 플로우 구성</p>\\n</li>\\n<li>\\n<p><strong>코드 기반 인경우의 예제</strong> : <a href=\\\"https://dev.to/aws-builders/aws-sts-with-spring-cloud-vault-1e5g\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://dev.to/aws-builders/aws-sts-with-spring-cloud-vault-1e5g</a></p>\\n</li>\\n<li>\\n<p><strong>Vault-Nomad Integration</strong> : <a href=\\\"https://www.nomadproject.io/docs/integrations/vault-integration\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://www.nomadproject.io/docs/integrations/vault-integration</a></p>\\n</li>\\n<li>\\n<p><strong>Version</strong> (<a href=\\\"https://releases.hashicorp.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Download</a>)</p>\\n<ul>\\n<li>Nomad v1.3.1 (2b054e38e91af964d1235faa98c286ca3f527e56)</li>\\n<li>Vault v1.10.3 (af866591ee60485f05d6e32dd63dde93df686dfb)</li>\\n</ul>\\n</li>\\n<li>\\n<p>Kubernetes 환경인 경우 Vault CSI Provider를 통해 비슷한 구성 가능 : <a href=\\\"https://www.vaultproject.io/docs/platform/k8s/csi\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://www.vaultproject.io/docs/platform/k8s/csi</a></p>\\n</li>\\n</ul>\\n</blockquote>\",\"copyright\":{\"license\":\"CC BY-NC-ND 4.0 Licensed | ⓒ 2021-present docmoa™ contributers all rights reserved.\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
